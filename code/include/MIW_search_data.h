#ifndef SEARCH_DATA_H
#define SEARCH_DATA_H

#define NUM_ANALYSES 9

#include <iostream>
#include <iomanip>

#include <climits>

/* ---------------------------------------------------------------------------   
 Description of the analysis variables:

 nreg_ANSYSTAG    - the number of signal regions the physics analysis has
 data_ANSYSTAG    - the number of events seen in the data for each signal region
 smpred_ANSYSTAG  - the number of events predicted by the standard model for each signal region, 
                    usually given in the original paper
 error_smpred_ANSYSTAG - the error on the standard model predicted number of events. This was used
                         previously because the number of events was assumed to be gaussian distributed.
                         Now that we assume the number of events is poisson distributed, this is no longer
                         used, though it should be taken into account if this package is extended to
                         show exclusion limits with +/- 1 sigma
 lumin_ANSYSTAG        - the integrated luminosity used by the original analysis
 error_lumin_ANSYSTAG  - the error on the integrated luminosity. See error_smpred_ANSYSTAG
 plot_opts_ANSYSTAG    - index [0] is the dominant branching fraction for the analysis to exclude
                         index [1] is the steps taken between contours for the plot
 UL95_ANSYSTAG         - sometimes it is easier/more accurate to do exclusion with an "Upper limit"
                         on the number of signal (SUSY) events that would not be excluded
                         by the signal region. This upper limit is call UL95.
------------------------------------------------------------------------------*/

// ---------- ATLAS2012_073 -------------
Int_t nreg_ATLAS2012_073=5;
Double_t data_ATLAS2012_073[5]        ={38.0,25.0,15.0,8.0,5.0};
Double_t smpred_ATLAS2012_073[5]      ={42.0,31.0,13.0,6.4,1.8};
Double_t error_smpred_ATLAS2012_073[5]={ 6.0, 4.0, 2.0,1.4,0.7};
Double_t lumin_ATLAS2012_073 = 4700;  //pb^-1
Double_t error_lumin_ATLAS2012_073=50;  //pb^-1
Double_t plot_opts_ATLAS2012_073[2]={0,0.25};
Double_t UL95_ATLAS2012_073[5]={LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX};

// ---------- ATLAS2012_145 -------------
Int_t nreg_ATLAS2012_145=6;
Double_t data_ATLAS2012_145[6]  =      {38.0, 8.0,4.0,20.0,4.0,2.0};
Double_t smpred_ATLAS2012_145[6]   =   {46.0,10.7,2.9,18.0,6.3,2.2};
Double_t error_smpred_ATLAS2012_145[6]={10.0, 2.9,1.0, 6.0,2.4,1.3};
Double_t lumin_ATLAS2012_145 = 12800;  //pb^-1
Double_t error_lumin_ATLAS2012_145=50;  //pb^-1
Double_t plot_opts_ATLAS2012_145[2]={0,0.25};
Double_t UL95_ATLAS2012_145[6]={1.4,0.59,0.51,1.3,0.46,0.40};

// ---------- ATLAS2012_165 -------------
Int_t nreg_ATLAS2012_165=7;
Double_t data_ATLAS2012_165[7]  =      {172.0,66.0,16.0,8.0,104.0,207.0,21.0};
Double_t smpred_ATLAS2012_165[7]   =   {176.0,71.0,25.0,7.4, 95.0,203.0,27.0};
Double_t error_smpred_ATLAS2012_165[7]={ 25.0,11.0, 4.0,1.7, 11.0, 35.0, 5.0};
Double_t lumin_ATLAS2012_165 = 12800;  //pb^-1
Double_t error_lumin_ATLAS2012_165=50;  //pb^-1
Double_t plot_opts_ATLAS2012_165[2]={0,0.25};
Double_t UL95_ATLAS2012_165[7]={4.1,1.7,0.61,0.62,3.0,4.2,0.74};

// ---------- ATLAS2012_166 -------------
Int_t nreg_ATLAS2012_166=6;
Double_t data_ATLAS2012_166[6]  =      {40.0,21.0,133.0,12.0,8.0,314.0};
Double_t smpred_ATLAS2012_166[6]   =   {34.0,14.0,125.0, 9.6,4.3,325.0};
Double_t error_smpred_ATLAS2012_166[6]={ 5.0, 3.0, 17.0, 1.5,1.1, 36.0};
Double_t lumin_ATLAS2012_166 = 13000;  //pb^-1
Double_t error_lumin_ATLAS2012_166=50;  //pb^-1
Double_t plot_opts_ATLAS2012_166[2]={0,0.25};
Double_t UL95_ATLAS2012_166[6]={1.6,1.3,3.5,0.8,0.8,5.4};

// ---------- ATLAS2013_007 -------------
Int_t nreg_ATLAS2013_007=4;
Double_t data_ATLAS2013_007[4]  =      {5.0,8.0,4.0,1.0};  //disc SR0b, disc SR1b, disc SR3b, excl SR3b
Double_t smpred_ATLAS2013_007[4]   =   {7.5,3.7,3.1,1.8};
Double_t error_smpred_ATLAS2013_007[4]={3.3,1.6,1.6,1.3};
Double_t lumin_ATLAS2013_007 = 20700;  //pb^-1
Double_t error_lumin_ATLAS2013_007=50;  //pb^-1
Double_t plot_opts_ATLAS2013_007[2]={1.,-0.25};
Double_t UL95_ATLAS2013_007[4]={0.33,0.53,0.34,LONG_MAX};

// ---------- ATLAS2013_061 -------------
Int_t nreg_ATLAS2013_061=9;
Double_t data_ATLAS2013_061[9]  =      {2.0,3.0,2.0,22.0,3.0,1.0, 7.0,0.0,0.0};  
Double_t smpred_ATLAS2013_061[9]   =   {3.0,1.3,1.8,22.5,3.6,0.8,15.5,7.4,3.0};
Double_t error_smpred_ATLAS2013_061[9]={1.3,1.0,1.8, 6.9,2.5,0.9, 8.4,5.7,2.8};
Double_t lumin_ATLAS2013_061 = 20100;  //pb^-1
Double_t error_lumin_ATLAS2013_061=50;  //pb^-1
Double_t plot_opts_ATLAS2013_061[2]={0.,0.25};
Double_t UL95_ATLAS2013_061[9]={0.23,0.33,0.24,0.76,0.30,0.19,0.33,0.15,0.15};  //for sigma x A x e

// ---------- CMS2012_028 -------------
Int_t nreg_CMS2012_028=59;
                                    // --HT-- |275-375|325-375|375-475|475-575|575-675|675-775|775-875| >875 |     Njet  Nbtag
Double_t data_CMS2012_028[59]     =     { 6232.0, 2904.0, 1965.0,  552.0,  177.0,   58.0,   16.0,  25.0,  //  2-3    0
                                                1164.0,  473.0,  329.0,   95.0,   23.0,    8.0,    4.0,   1.0,  //  2-3    1
                                                 222.0,  107.0,   58.0,   12.0,    5.0,    1.0,    0.0,   0.0,  //  2-3    2
                                                1009.0,  452.0,  375.0,  274.0,  113.0,   56.0,   16.0,  27.0,  //  >=4    0
                                                 515.0,  236.0,  204.0,   92.0,   51.0,   13.0,   13.0,   6.0,  //  >=4    1
                                                 204.0,  107.0,   84.0,   59.0,   24.0,    5.0,    1.0,   2.0,  //  >=4    2
                                                  25.0,   13.0,    4.0,    2.0,    2.0,    3.0,    0.0,   0.0,  //  >=4    3
                                                   1.0,    0.0,    2.0                                       }; //  >=4   >=4

                                    // --HT-- |275-375|325-375|375-475|475-575|575-675|675-775|775-875| >875 |     Njet  Nbtag
Double_t smpred_CMS2012_028[59]     =   { 6235.0, 2900.0, 1955.0,  558.0,  186.0,   51.3,   21.2,  16.1,  //  2-3    0
                                                1162.0,  481.0,  341.0,   86.7,   24.8,    7.2,    3.3,   2.1,  //  2-3    1
                                                 224.0,   98.2,   59.0,   12.8,    3.0,    0.5,    0.1,   0.1,  //  2-3    2
                                                1010.0,  447.0,  390.0,  250.0,  111.0,   53.3,   18.5,  19.4,  //  >=4    0
                                                 521.0,  232.0,  188.0,  106.0,   42.1,   17.9,    9.8,   6.8,  //  >=4    1
                                                 208.0,  103.0,   85.9,   51.7,   19.9,    6.8,    1.7,   1.3,  //  >=4    2
                                                  25.3,   11.7,    6.7,    3.9,    2.3,    1.2,    0.3,   0.1,  //  >=4    3
                                                   0.9,    0.3,    0.6                                       }; //  >=4   >=4

                                    // --HT-- |275-375|325-375|375-475|475-575|575-675|675-775|775-875| >875 |    Njet  Nbtag
Double_t error_smpred_CMS2012_028[59] = {  100.0,   60.0,   39.0,   15.0,   11.0,    3.8,    2.3,   1.7,  //  2-3    0
                                                  37.0,   19.0,   16.0,    5.6,    2.8,    1.1,    0.7,   0.5,  //  2-3    1
                                                  15.0,    8.4,    6.0,    1.6,    0.9,    0.2,    0.1,   0.1,  //  2-3    2
                                                  34.0,   19.0,   19.0,   12.0,    9.0,    4.3,    2.4,   2.5,  //  >=4    0
                                                  25.0,   15.0,   12.0,    6.0,    4.1,    2.2,    1.5,   1.2,  //  >=4    1
                                                  17.0,    9.0,    7.2,    4.7,    3.4,    1.2,    0.7,   0.4,  //  >=4    2
                                                   5.0,    1.8,    1.4,    0.8,    0.6,    0.4,    0.2,   0.1,  //  >=4    3
                                                   0.4,    0.2,    0.3                                       }; //  >=4   >=4

Double_t lumin_CMS2012_028 = 11700;  //pb^-1
Double_t error_lumin_CMS2012_028=500;  //pb^-1 
Double_t plot_opts_CMS2012_028[2]={0,0.25};
Double_t UL95_CMS2012_028[59]={LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,
                                LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,
                                LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,
                                LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,
                                LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,
                                LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,
                                LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,
                                LONG_MAX,LONG_MAX,LONG_MAX                                             };

// ---------- CMS2013_007 -------------
  //reset nreg to 33 to include the delta phi signal regions
Int_t nreg_CMS2013_007=9;
Double_t data_CMS2013_007[33]  =      {72.0,12.0,1.0,39.0,11.0,1.0,16.0,5.0,1.0,
                                       59.0,11.0,1.0,30.0, 8.0,1.0, 5.0,0.0,0.0,2.0,2.0,0.0,
                                        9.0, 2.0,0.0, 9.0, 2.0,0.0, 0.0,0.0,0.0,4.0,0.0,0.0};  
Double_t smpred_CMS2013_007[33]   =   {71.3,18.4,0.7,32.7,12.3,0.7,14.2,2.5,0.2,
                                       41.9, 8.5,2.5,34.2, 5.1,5.6, 3.9,1.1,0.3,3.9,0.3,0.3,
                                        6.0, 1.4,0.0, 3.8, 2.7,0.0, 1.9,0.6,0.0,1.9,0.9,0.0};
Double_t error_smpred_CMS2013_007[33]={11.5, 6.3,3.3, 6.6, 4.6,3.1, 4.2,2.7,3.2,
                                        5.6, 2.4,1.3, 5.4, 1.9,2.1, 0.8,0.4,0.2,0.9,0.2,0.2,
                                        2.4, 1.2,0.7, 1.8, 2.0,0.4, 1.0,0.6,0.2,1.0,0.8,0.1};
Double_t lumin_CMS2013_007 = 19400;  //pb^-1
Double_t error_lumin_CMS2013_007=50;  //pb^-1
Double_t plot_opts_CMS2013_007[2]={1.,-0.25};
Double_t UL95_CMS2013_007[33]={LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,
                               LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,
                               LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,
                               LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX};



// ---------- CMS2013_008 -------------
Int_t nreg_CMS2013_008=60;
Double_t data_CMS2013_008[60]  =      {36.0, 13.0, 0.0 , 2.0 , 0.0 , 0.0 , 7.0, 1.0, 1.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 ,
                                              9.0,  6.0, 0.0 , 3.0 , 3.0 , 0.0 , 7.0, 0.0, 0.0 , 1.0 , 0.0 , 0.0 , 1.0 , 0.0 , 0.0 ,
                                             30.0,  6.0, 0.0 , 1.0 , 0.0 , 0.0 , 5.0, 1.0, 0.0 , 1.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 
                                             13.0,  3.0, 0.0 , 4.0 , 5.0 , 1.0 , 2.0, 1.0, 0.0 , 1.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0  }; 

Double_t smpred_CMS2013_008[60]   =   {33.3, 11.8, 0.33, 0.92, 0.10, 0.09, 4.7, 2.2, 0.22, 0.13, 0.16, 0.09, 0.09, 0.12, 0.09,
                                             10.9,  9.0, 1.2 , 5.3 , 3.5 , 0.74, 3.8, 1.9, 0.14, 2.7 , 1.7 , 0.33, 0.56, 0.17, 0.20,
                                             15.0,  5.0, 0.36, 0.11, 0.19, 0.11, 2.3, 1.3, 0.12, 0.20, 0.22, 0.09, 0.09, 0.09, 0.09, 
                                              9.3,  5.5, 0.9 , 4.9 , 3.0 , 0.56, 2.6, 1.3, 0.46, 2.9 , 1.6 , 0.29, 0.17, 0.25, 0.02 };

Double_t error_smpred_CMS2013_008[60]={ 7.0,  2.6, 0.21, 0.36, 0.12, 0.0 , 1.9, 0.7, 0.19, 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 ,
                                              2.4,  2.0, 0.4 , 1.3 , 1.0 , 0.31, 1.1, 0.7, 0.13, 0.8 , 0.6 , 0.18, 0.27, 0.13, 0.19,
                                              4.5,  1.7, 0.22, 0.12, 0.0 , 0.0 , 0.8, 0.5, 0.12, 0.16, 0.0 , 0.0 , 0.0 , 0.0 , 0.0 ,
                                              3.2,  2.0, 0.4 , 2.0 , 1.3 , 0.31, 1.0, 0.6, 0.24, 1.3 , 0.8 , 0.19, 0.14, 0.16, 0.09 };

Double_t lumin_CMS2013_008 = 19500;  //pb^-1
Double_t error_lumin_CMS2013_008=858;  //pb^-1  -- 4.4% uncertainty
Double_t plot_opts_CMS2013_008[2]={1.,-0.25};
Double_t UL95_CMS2013_008[60]={LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,
                                LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,
                                LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,
                                LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,
                                LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,
                                LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,
                                LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX,
                                LONG_MAX,LONG_MAX,LONG_MAX,LONG_MAX                                    };

Double_t nSRlist[NUM_ANALYSES]={nreg_ATLAS2012_073,
                                nreg_ATLAS2012_145,
                                nreg_ATLAS2012_165,
                                nreg_ATLAS2012_166,
                                nreg_ATLAS2013_007,
                                nreg_ATLAS2013_061,
                                nreg_CMS2012_028,
                                nreg_CMS2013_007,
                                nreg_CMS2013_008};

Double_t* datalist[NUM_ANALYSES]={data_ATLAS2012_073,
                                  data_ATLAS2012_145,
                                  data_ATLAS2012_165,
                                  data_ATLAS2012_166,
                                  data_ATLAS2013_007,
                                  data_ATLAS2013_061,
                                  data_CMS2012_028,
                                  data_CMS2013_007,
                                  data_CMS2013_008};

Double_t* smpredlist[NUM_ANALYSES]={smpred_ATLAS2012_073,
                                    smpred_ATLAS2012_145,
                                    smpred_ATLAS2012_165,
                                    smpred_ATLAS2012_166,
                                    smpred_ATLAS2013_007,
                                    smpred_ATLAS2013_061,
                                    smpred_CMS2012_028,
                                    smpred_CMS2013_007,
                                    smpred_CMS2013_008};

Double_t* error_smpredlist[NUM_ANALYSES]={error_smpred_ATLAS2012_073,
                                          error_smpred_ATLAS2012_145,
                                          error_smpred_ATLAS2012_165,
                                          error_smpred_ATLAS2012_166,
                                          error_smpred_ATLAS2013_007,
                                          error_smpred_ATLAS2013_061,
                                          error_smpred_CMS2012_028,
                                          error_smpred_CMS2013_007,
                                          error_smpred_CMS2013_008};

Double_t luminlist[NUM_ANALYSES]={lumin_ATLAS2012_073,
                                  lumin_ATLAS2012_145,
                                  lumin_ATLAS2012_165,
                                  lumin_ATLAS2012_166,
                                  lumin_ATLAS2013_007,
                                  lumin_ATLAS2013_061,
                                  lumin_CMS2012_028,
                                  lumin_CMS2013_007,
                                  lumin_CMS2013_008};

Double_t error_luminlist[NUM_ANALYSES]={error_lumin_ATLAS2012_073,
                                        error_lumin_ATLAS2012_145,
                                        error_lumin_ATLAS2012_165,
                                        error_lumin_ATLAS2012_166,
                                        error_lumin_ATLAS2013_007,
                                        error_lumin_ATLAS2013_061,
                                        error_lumin_CMS2012_028,
                                        error_lumin_CMS2013_007,
                                        error_lumin_CMS2013_008};

Double_t* plot_optslist[NUM_ANALYSES]={plot_opts_ATLAS2012_073,
                                       plot_opts_ATLAS2012_145,
                                       plot_opts_ATLAS2012_165,
                                       plot_opts_ATLAS2012_166,
                                       plot_opts_ATLAS2013_007,
                                       plot_opts_ATLAS2013_061,
                                       plot_opts_CMS2012_028,
                                       plot_opts_CMS2013_007,
                                       plot_opts_CMS2013_008};

Double_t* UL95list[NUM_ANALYSES]={UL95_ATLAS2012_073,
                                  UL95_ATLAS2012_145,
                                  UL95_ATLAS2012_165,
                                  UL95_ATLAS2012_166,
                                  UL95_ATLAS2013_007,
                                  UL95_ATLAS2013_061,
                                  UL95_CMS2012_028,
                                  UL95_CMS2013_007,
                                  UL95_CMS2013_008};

char* ansysnamelist[NUM_ANALYSES]={"ATLAS2012_073",
                                   "ATLAS2012_145", 
                                   "ATLAS2012_165",
                                   "ATLAS2012_166",
                                   "ATLAS2013_007",
                                   "ATLAS2013_061",
                                   "CMS2012_028",
                                   "CMS2013_007",
                                   "CMS2013_008"    };


Int_t get_nSR(char* ansystag){
  for(Int_t i=0;i<NUM_ANALYSES;++i){
    if( strcmp(ansystag,ansysnamelist[i]) == 0 ){
      return nSRlist[i];
    }
  }
  std::cout << "Could not find the analysis " << ansystag << " in MIW_search_data.h...\n";
  return -1;
};

Double_t* get_data(char* ansystag){
  for(Int_t i=0;i<NUM_ANALYSES;++i){
    if( strcmp(ansystag,ansysnamelist[i]) == 0 ){
      return datalist[i];
    }
  }
  return NULL;
};

Double_t* get_smpred(char* ansystag){
  for(Int_t i=0;i<NUM_ANALYSES;++i){
    if( strcmp(ansystag,ansysnamelist[i]) == 0 ){
      return smpredlist[i];
    }
  }
  return NULL;
};

Double_t* get_error_smpred(char* ansystag){
  for(Int_t i=0;i<NUM_ANALYSES;++i){
    if( strcmp(ansystag,ansysnamelist[i]) == 0 ){
      return error_smpredlist[i];
    }
  }
  return NULL;
};

Double_t get_lumin(char* ansystag){
  for(Int_t i=0;i<NUM_ANALYSES;++i){
    if( strcmp(ansystag,ansysnamelist[i]) == 0 ){
      return luminlist[i];
    }
  }
  return -1.;
};

Double_t get_error_lumin(char* ansystag){
  for(Int_t i=0;i<NUM_ANALYSES;++i){
    if( strcmp(ansystag,ansysnamelist[i]) == 0 ){
      return error_luminlist[i];
    }
  }
  return -1.;
};

Double_t* get_plot_opts(char* ansystag){
  for(Int_t i=0;i<NUM_ANALYSES;++i){
    if( strcmp(ansystag,ansysnamelist[i]) == 0 ){
      return plot_optslist[i];
    }
  }
  return NULL;
};

Double_t* get_UL95(char* ansystag){
  for(Int_t i=0;i<NUM_ANALYSES;++i){
    if( strcmp(ansystag,ansysnamelist[i]) == 0 ){
      return UL95list[i];
    }
  }
  return NULL;
};

//StopMass[ind]=100+ind*5
//Cross-sections in picobarns
Double_t stop_crossx[381]={559.757, 448.456, 361.917, 293.281, 240.077, 197.122, 163.376, 135.791, 113.319, 95.0292, 80.268, 68.0456, 58.01, 49.6639, 42.6441, 36.7994, 31.8695, 27.7028, 24.1585, 21.1597, 18.5245, 16.2439, 14.3201, 12.6497, 11.1808, 9.90959, 8.78125, 7.81646, 6.96892, 6.22701, 5.57596, 5.00108, 4.48773, 4.03416, 3.63085, 3.2781, 2.95613, 2.67442, 2.42299, 2.19684, 1.99608, 1.81486, 1.64956, 1.50385, 1.3733, 1.25277, 1.14277, 1.04713, 0.959617, 0.879793, 0.807323, 0.74141, 0.681346, 0.626913, 0.576882, 0.531443, 0.489973, 0.452072, 0.4176, 0.385775, 0.35683, 0.329881, 0.305512, 0.283519, 0.262683, 0.243755, 0.226367, 0.209966, 0.195812, 0.181783, 0.169668, 0.158567, 0.147492, 0.137392, 0.128326, 0.119275, 0.112241, 0.104155, 0.0977878, 0.091451, 0.0855847, 0.0801322, 0.0751004, 0.0703432, 0.0660189, 0.0618641, 0.0580348, 0.0545113, 0.0511747, 0.0481537, 0.0452067, 0.0424781, 0.0399591, 0.0376398, 0.0354242, 0.0333988, 0.0313654, 0.0295471, 0.0279395, 0.0263263, 0.0248009, 0.0233806, 0.0220672, 0.0208461, 0.0196331, 0.0185257, 0.0175075, 0.0164955, 0.0155809, 0.0147721, 0.0139566, 0.0132456, 0.0125393, 0.0118287, 0.0112223, 0.0106123, 0.0100516, 0.0095256, 0.0090306, 0.00856339, 0.0081141, 0.00769525, 0.00730084, 0.00692243, 0.00656729, 0.00623244, 0.00591771, 0.00561049, 0.00532605, 0.00506044, 0.00480639, 0.00455979, 0.00433688, 0.00412174, 0.00391839, 0.00372717, 0.00354211, 0.00336904, 0.00320476, 0.00304935, 0.00289588, 0.00275424, 0.0026184, 0.00249291, 0.00237168, 0.00226163, 0.00214607, 0.00204589, 0.00195172, 0.0018573, 0.00176742, 0.00168383, 0.00160403, 0.00153063, 0.00145772, 0.0013878, 0.00132077, 0.00126234, 0.00120568, 0.00114627, 0.00109501, 0.001044, 0.000996193, 0.00095071, 0.000907494, 0.000866391, 0.000826533, 0.000789573, 0.000753768, 0.000719675, 0.000687022, 0.000656279, 0.000626876, 0.000598955, 0.000571551, 0.000546728, 0.000522495, 0.000499017, 0.000476255, 0.000455959, 0.000435488, 0.000416116, 0.00039791, 0.000379994, 0.000363934, 0.000347646, 0.00033204,
                           0.000318049, 0.000303756, 0.000290392, 0.000277943, 0.000265929, 0.000254659, 0.000243251, 0.00023289, 0.000222651, 0.000213396, 0.000204211, 0.000196038, 0.000187913, 0.000179699, 0.000172125, 0.000165045, 0.000157905, 0.000151236, 0.000144737, 0.000138657, 0.000133343, 0.000127478, 0.00012234, 0.000117215, 0.000112199, 0.000107256, 0.000103046, 9.86633e-05, 9.44977e-05, 9.05131e-05, 8.67972e-05, 8.31669e-05, 7.96568e-05, 7.63052e-05, 7.31846e-05, 7.00987e-05, 6.72666e-05, 6.44711e-05, 6.18495e-05, 5.93775e-05, 5.69258e-05, 5.46007e-05, 5.23902e-05, 5.02385e-05, 4.81984e-05, 4.6268e-05, 4.43332e-05, 4.25134e-05, 4.07881e-05, 3.91417e-05, 3.75567e-05, 3.60147e-05, 3.4617e-05, 3.31856e-05, 3.18643e-05, 3.05669e-05, 2.93562e-05, 2.81652e-05, 2.70203e-05, 2.59296e-05, 2.49015e-05, 2.39221e-05, 2.29308e-05, 2.20166e-05, 2.11331e-05, 2.02909e-05, 1.94752e-05, 1.8714e-05, 1.79681e-05, 1.72697e-05, 1.65664e-05, 1.58669e-05, 1.52759e-05, 1.46673e-05, 1.40698e-05, 1.35484e-05, 1.30386e-05, 1.253e-05, 1.20335e-05, 1.15351e-05, 1.11127e-05, 1.06301e-05, 1.02226e-05, 9.84287e-06, 9.45889e-06, 9.09124e-06, 8.73208e-06, 8.38911e-06, 8.05993e-06, 7.74413e-06, 7.44538e-06, 7.14898e-06, 6.86798e-06, 6.59698e-06, 6.33638e-06, 6.08509e-06, 5.84265e-06, 5.6093e-06, 5.38651e-06, 5.1742e-06, 4.97273e-06, 4.77117e-06, 4.58178e-06, 4.39875e-06, 4.22724e-06, 4.05582e-06, 3.89113e-06, 3.72963e-06, 3.58102e-06, 3.43895e-06, 3.29773e-06, 3.16675e-06, 3.03589e-06, 2.91221e-06, 2.79219e-06, 2.66816e-06, 2.55964e-06, 2.44758e-06, 2.34644e-06, 2.24557e-06, 2.15574e-06, 2.0669e-06, 1.98515e-06, 1.90249e-06, 1.83115e-06, 1.76963e-06, 1.70036e-06, 1.63964e-06, 1.58714e-06, 1.52765e-06, 1.47645e-06, 1.42533e-06, 1.37529e-06, 1.32467e-06, 1.27389e-06, 1.22407e-06, 1.18167e-06, 1.13218e-06, 1.09086e-06, 1.04182e-06, 1.00428e-06, 9.64964e-07, 9.26859e-07, 8.90605e-07, 8.56319e-07, 8.2246e-07, 7.90884e-07, 7.59995e-07, 7.3087e-07, 7.02001e-07, 6.75402e-07, 6.49168e-07, 6.24339e-07, 6.00052e-07, 5.76531e-07, 5.5474e-07, 5.33316e-07, 5.129e-07, 4.93338e-07, 4.74104e-07, 4.55409e-07, 4.37889e-07, 4.21436e-07, 4.04973e-07, 3.89723e-07, 3.7399e-07, 3.59977e-07, 3.45452e-07, 3.32155e-07, 3.19667e-07, 3.06274e-07, 2.95073e-07, 2.83743e-07, 2.724e-07, 2.62039e-07, 2.51734e-07, 2.4149e-07, 2.32237e-07, 2.23897e-07, 2.14605e-07, 2.06292e-07, 1.99019e-07, 1.90756e-07, 1.83446e-07, 1.7615e-07, 1.69813e-07, 1.62682e-07, 1.56389e-07, 1.51029e-07, 1.44807e-07, 1.39563e-07, 1.34259e-07, 1.29026e-07, 1.23774e-07};
Double_t stop_crossxerr[381]={16.1085, 15.9732, 16.1134, 15.9763, 15.9212, 15.7303, 15.8101, 15.8086, 15.7234, 15.649, 15.5946, 15.5232, 15.3899, 15.3711, 15.3017, 15.1749, 15.2449, 15.063, 15.16, 14.9422, 14.9147, 15.117, 14.8495, 14.8689, 14.9108, 14.9662, 14.796, 14.7983, 14.7878, 14.7897, 14.7529, 14.729, 14.6782, 14.7964, 14.6565, 14.7341, 14.7816, 14.7661, 14.6805, 14.8465, 14.6905, 14.4434, 14.4769, 14.4549, 14.7503, 14.2875, 14.578, 14.3659, 14.3896, 14.3881, 14.3597, 14.368, 14.3357, 14.3627, 14.2712, 14.266, 14.3962, 14.2234, 14.3166, 14.3112, 14.2848, 14.2072, 14.2648, 14.102, 14.3075, 14.0504, 14.0494, 14.0334, 14.0772, 14.1771, 14.2368, 14.2609, 14.4105, 14.4772, 14.5144, 14.6664, 14.6307, 14.7581, 14.7977, 14.8963, 14.9611, 15.0389, 15.1402, 15.2139, 15.3368, 15.4135, 15.4422, 15.5446, 15.6283, 15.726, 15.8177, 15.9022, 16.0067, 16.0367, 16.137, 16.2132, 16.3135, 16.4264, 16.4546, 16.567, 16.6406, 16.7295, 16.8447, 16.9276, 17.0459, 17.0835, 17.1478, 17.2753, 17.3814, 17.4885, 17.56, 17.6129, 17.7363, 17.7959, 17.8974, 17.9891, 18.0618, 18.1714, 18.2108, 18.3365, 18.4146, 18.4937, 18.6195, 18.7005, 18.819, 18.8796, 18.996, 19.0787, 19.1995, 19.2916, 19.4088, 19.508, 19.632, 19.7141, 19.8299, 19.9097, 20.0016, 20.123, 20.2271, 20.4479, 20.516, 20.5444, 20.8204, 21.0063, 21.0865, 21.0511, 21.3705, 21.3026, 21.6053, 21.8177, 21.836, 22.1411, 22.0506, 22.3461, 22.6206, 22.5422, 23.2161, 23.1283, 23.8404, 23.7327, 23.9439, 24.1049, 24.2789, 24.5443, 24.7597, 24.877, 25.0849, 25.2885, 25.4768, 25.6582, 25.8341, 26.0372, 26.2059, 26.3653, 26.5169, 26.7985, 26.9218, 27.1036, 27.3032, 27.4544, 27.6595, 27.8649, 27.9983, 28.2833, 28.4046, 28.5755, 28.8856, 28.9792, 29.0799, 29.3415, 29.6252, 29.7061, 29.946, 30.237, 30.4322, 30.6837, 30.9264, 31.1401, 31.3673, 31.5579, 31.8291, 32.3718, 32.5508, 32.8048, 32.6359, 33.2161, 33.4105, 33.9387, 33.9505, 34.2228, 34.5171, 34.6636, 34.7177, 35.14, 35.2448, 35.491, 35.6874, 35.8364, 36.0309, 36.1691, 36.4029, 36.5593, 36.8407, 37.0524, 37.2551, 37.4468, 37.73, 37.9974, 38.1849, 38.4532, 38.7169, 38.9583, 39.295, 39.533, 39.7556, 40.0677, 40.3688, 40.5687, 40.8636, 41.111, 41.3826, 41.6171, 41.8635, 42.0558, 42.2681, 42.6434, 42.8496, 43.1496, 43.2927, 43.3701, 43.7141, 43.7576, 44.275, 44.5547, 44.489, 45.0069, 45.2231, 45.3811, 45.629, 45.6655, 45.9932, 46.2074, 46.5574, 46.9138, 47.235, 47.4376, 47.6339, 48.0539, 48.0551, 48.3748, 48.7594, 49.0619, 49.2373, 49.5338, 49.7994, 50.0207, 50.3417, 50.5264, 50.7934, 51.0213, 51.2711, 51.4848, 51.7365, 51.9947, 52.2054, 52.4747, 52.7563, 52.9922, 53.2497, 53.4133, 53.7199, 53.9776, 54.2081, 54.5909, 54.8285, 54.9611, 55.2433, 55.5563, 55.7857, 55.9798, 56.3512, 56.5093, 56.8717, 56.9442, 57.2952, 57.5294, 57.7382, 57.8618, 58.016, 58.2828, 58.651, 58.9189, 59.2455, 59.4164, 59.6636, 60.0861, 60.2995, 60.5926, 60.8999, 61.1528, 61.392, 61.6317, 61.8075, 62.2826, 62.4136, 62.7163, 62.7379, 63.1036, 63.3464, 63.6113, 63.8391, 64.0747, 64.3035, 64.5973, 64.8419, 65.0354, 65.3007, 65.5868, 65.7934, 66.0476, 66.2636, 66.5428, 66.8028, 67.0617, 67.2985, 67.6074, 67.7943, 68.0365, 68.3383, 68.6014, 68.8823, 69.08, 69.4608, 69.5443, 69.8554, 70.0667, 70.3694, 70.6069, 70.7798, 70.9919, 71.2184, 71.4803, 71.6697, 71.8236, 72.076, 72.3551, 72.5351, 72.7478, 73.0776, 73.2183, 73.4612, 73.6804, 73.9751, 74.0833, 74.3243, 74.6914, 74.8288, 75.1522, 75.4315, 75.6265, 75.8327};

//GluinoMass[ind]=200+ind*5
//Cross-sections in picobarns
Double_t gogo_crossx[361]={1010.1,888.038,782.82,690.67,610.177,540.437,479.688,426.694,379.598,338.228,302.3,270.569,242.843,217.628,195.926,176.213,158.621,143.51,129.421,117.331,106.269,96.4393,87.6653,79.7744,72.687,66.2653,60.5336,55.369,50.6463,46.4307,42.5663,39.0611,35.9491,33.0444,30.435,28.0354,25.88,23.8782,22.073,20.4283,18.8721,17.4227,16.1707,14.9804,13.8804,12.8817,11.9789,11.0855,10.3321,9.59091,8.93257,8.32507,7.75814,7.24166,6.76031,6.31553,5.89981,5.51473,5.16376,4.82913,4.52485,4.24081,3.96713,3.71672,3.49333,3.27008,3.0669,2.88611,2.70371,2.54097,2.38869,2.24732,2.11612,1.99418,1.87218,1.76075,1.65934,1.56783,1.47661,1.39575,1.31429,1.24324,1.17213,1.10066,1.04006,0.985407,0.931497,0.880476,0.832847,0.786926,0.744472,0.704916,0.667058,0.631306,0.597843,0.56624,0.536593,0.50942,0.482843,0.457432,0.433971,0.411416,0.390086,0.370645,0.352514,0.33408,0.317737,0.301462,0.286089,0.271852,0.258598,0.24633,0.234109,0.222826,0.211617,0.201354,0.191111,0.18202,0.173801,0.165647,0.157399,0.150172,0.142838,0.135881,0.129292,0.123451,0.117155,0.11198,0.106724,0.101468,0.0966803,0.0922606,0.0878851,0.0837802,0.0799422,0.0762312,0.072704,0.0693676,0.0661977,0.0631751,0.060276,0.0575238,0.054922,0.052471,0.0500914,0.0478794,0.0457437,0.0436802,0.0417248,0.0398759,0.0381246,0.0364316,0.0348221,0.033282,0.0318672,0.0304177,0.0290889,0.0278154,0.0265993,0.0254762,0.0243547,0.0233412,0.0222816,0.0213092,0.0204008,0.0195439,0.0186399,0.0178964,0.0170845,0.0163849,0.0156931,0.0149871,0.0143428,0.0137535,0.0131578,0.0126249,0.0120916,0.0115882,0.0110906,0.0105972,0.0101744,0.00975322,0.00934364,0.00895424,0.00858597,0.00823026,0.00788948,0.00756671,0.00724917,0.00695169,0.00666673,0.00639182,0.00613149,0.00588262,0.0056425,0.0054104,0.00519563,0.00498468,0.00477732,0.00458673,0.00440078,0.00422593,0.0040514,0.00389138,0.00372785,0.00357858,0.00343744,0.00330131,0.0031691,0.00303793,0.00291565,0.00280625,0.00269022,0.00258061,0.00248068,0.00238091,0.00228827,0.00219864,0.00210573,0.00202657,0.00194443,0.00186692,0.00179418,0.00172271,0.00165064,0.00158945,0.00152847,0.0014675,0.0014106,0.0013492,0.00129951,0.00124801,0.0011984,0.00114871,0.00110711,0.00106538,0.00102485,0.00098222,0.000943754,0.000906445,0.000871201,0.00083687,0.000804842,0.000773344,0.000743009,0.000714083,0.000686632,0.000659782,0.000634212,0.000609136,0.00058599,0.00056309,0.000541725,0.000520546,0.000500264,0.000481062,0.000462071,0.000443875,0.000426659,0.000410737,0.000394612,0.000379584,0.000364688,0.000350346,0.000337197,0.000323984,0.000311214,0.000299031,0.000287604,0.00027663,0.000265533,0.000255837,0.000245873,0.000236606,0.000227404,0.000218539,0.000209696,0.00020156,0.000194171,0.000186477,0.000179423,0.000172361,0.000165332,0.000159471,0.000153392,0.000147446,0.000141507,0.000136462,0.000131372,0.000126312,0.000121361,0.000116488,0.000112313,0.000107505,0.000103502,9.95545e-05,9.56648e-05,9.19785e-05,8.84717e-05,8.5105e-05,8.17761e-05,7.86327e-05,7.55929e-05,7.26295e-05,6.98621e-05,6.71419e-05,6.4556e-05,6.20851e-05,5.97211e-05,5.74255e-05,5.51497e-05,5.30377e-05,5.10074e-05,4.90166e-05,4.71201e-05,4.52786e-05,4.35033e-05,4.18723e-05,4.01971e-05,3.86643e-05,3.71771e-05,3.57622e-05,3.43583e-05,3.29627e-05,3.1738e-05,3.04796e-05,2.93288e-05,2.81348e-05,2.70614e-05,2.60099e-05,2.50085e-05,2.40021e-05,2.31231e-05,2.21893e-05,2.12977e-05,2.04823e-05,1.97133e-05,1.89005e-05,1.81887e-05,1.74813e-05,1.67835e-05,1.60881e-05,1.54787e-05,1.4876e-05,1.42691e-05,
                              1.37589e-05,1.32437e-05,1.2654e-05,1.21604e-05,1.17397e-05,1.12426e-05,1.08304e-05,1.04217e-05,9.97664e-06,9.58718e-06,9.20837e-06,8.84663e-06,8.49858e-06,8.15342e-06,7.84163e-06,7.52864e-06};
Double_t gogo_crossxerr[361]={15.3749,15.3143,15.247,15.183,15.1551,15.0907,15.1381,15.0219,15.088,14.9509,14.8648,15.0585,14.8413,14.772,14.8812,14.9861,15.0729,14.6896,15.0685,14.5477,14.848,14.8794,14.816,14.8206,14.8953,14.9073,14.8466,14.8622,14.925,15.0063,14.9279,14.9393,14.906,14.8652,15.1122,15.0177,15.0576,14.9156,15.1048,15.1019,15.0928,15.0661,14.9522,15.1417,15.3588,14.8223,15.015,15.2702,14.9422,14.9413,15.0053,15.0735,15.1709,15.2336,15.2982,15.3793,15.4448,15.5158,15.5803,15.6821,15.7449,15.808,15.892,15.9768,16.0268,16.1175,16.1858,16.2489,16.3596,16.4316,16.4895,16.5305,16.6508,16.7097,16.7973,16.8606,16.9328,16.993,17.1088,17.1259,17.2269,17.3003,17.3466,17.4716,17.5739,17.5919,17.6817,17.7587,17.7948,17.8762,18.0043,18.0369,18.1326,18.2113,18.2496,18.3422,18.4245,18.4902,18.5676,18.6079,18.6986,18.7936,18.829,18.9111,18.9679,19.0508,19.1467,19.1863,19.2731,19.2968,19.4346,19.5161,19.5609,19.6315,19.6785,19.7494,19.8564,19.9151,19.987,20.0114,20.1277,20.2259,20.4439,20.3414,20.8895,20.6589,20.8985,21.0456,21.2607,21.2567,21.2994,21.4722,21.6719,21.7595,21.9007,22.019,22.1713,22.2927,22.3601,22.5385,22.6836,22.7399,22.916,23.1002,23.2393,23.4801,23.5378,23.6783,23.8237,24.0298,24.1578,24.4395,24.4519,24.5795,24.7222,24.9003,24.9951,25.3006,25.4447,25.5674,25.6713,25.729,26.1486,25.9706,26.0441,26.3787,26.4928,26.7975,26.896,26.9164,26.929,26.9811,27.3367,27.3472,27.3129,27.6365,28.0459,28.1145,28.085,28.1071,28.3906,28.5344,28.7555,28.8933,29.0192,29.2287,29.4086,29.5561,29.6991,29.8705,30.0712,30.1806,30.4126,30.4988,30.7713,30.9359,31.0761,31.2172,31.4369,31.5987,31.7987,31.9773,32.2519,32.2853,32.562,32.5751,32.7486,33.1174,33.2696,33.4577,33.6088,33.7125,34.0592,34.2096,34.2609,34.3786,34.6776,34.7331,35.0623,35.0509,35.3454,35.3372,35.5952,35.8598,36.181,36.3322,36.6043,36.838,36.6295,36.9211,37.0468,37.2732,37.3879,37.5039,37.7908,38.1495,38.3903,38.3992,38.5307,38.7225,38.9186,39.1534,39.3134,39.4673,39.6856,39.8536,40.1044,40.2328,40.4424,40.6256,40.8174,40.9579,41.2293,41.4388,41.587,41.8322,41.9992,42.2248,42.4615,42.6225,42.8374,43.0121,43.163,43.4704,43.6989,43.9886,44.0585,44.3182,44.7194,44.8875,45.1206,45.2454,45.3983,45.7461,46.0533,46.1454,46.2467,46.5183,47.0692,47.0494,47.269,47.4992,47.74,47.8837,48.1321,48.273,48.3977,48.7077,49.0001,49.2408,49.3527,49.4938,49.8886,49.8101,50.0869,50.3339,50.4918,50.734,50.9087,51.1242,51.3378,51.5767,51.7333,52.0188,52.2189,52.4157,52.6517,52.8214,53.1281,53.3812,53.4636,53.7555,53.9836,54.2153,54.4355,54.7372,54.8848,55.2468,55.3865,55.6656,55.8389,56.127,56.386,56.4997,56.8528,56.8583,57.3577,57.5468,57.6241,58.0405,58.2816,58.5301,58.6138,59.0514,59.2072,59.5237,59.4866,59.7809,60.0879,60.3347,60.518,60.667,60.9301,61.1518,61.3804,61.6823,62.0392,62.0765,62.2383,62.6928,62.789,63.1447,63.4321,63.4885,63.7209,64.0165,64.1813,64.4633,64.6832,64.9299,65.128};

//SquarkMass[ind]=200+ind*5
//Cross-sections in picobarns
Double_t sqsq_crossx[361]={183.39, 161.698, 142.58, 125.929, 111.823, 98.9543, 88.0735, 78.3726, 69.9287, 62.4475, 55.8655, 50.0353, 44.872, 40.3588, 36.2952, 32.6904, 29.4837, 26.684, 24.0805, 21.8754, 19.8283, 17.9775, 16.3807, 14.8797, 13.6321, 12.3823, 11.3341, 10.3402, 9.4867, 8.69857, 7.98294, 7.33082, 6.74253, 6.2001, 5.70703, 5.26422, 4.85531, 4.48249, 4.13982, 3.83124, 3.54338, 3.27974, 3.03212, 2.80824, 2.60479, 2.41646, 2.24263, 2.08373, 1.93506, 1.80099, 1.67947, 1.5592, 1.45828, 1.35811, 1.26736, 1.18724, 1.10691, 1.0373, 0.966438, 0.905378, 0.847051, 0.79269, 0.742713, 0.696372, 0.652256, 0.612173, 0.573845, 0.538581, 0.506557, 0.475284, 0.447055, 0.420097, 0.394852, 0.371658, 0.349577, 0.329425, 0.310358, 0.292268, 0.275027, 0.260023, 0.244862, 0.230716, 0.217676, 0.205519, 0.194542, 0.183393, 0.173285, 0.163215, 0.154094, 0.146017, 0.137949, 0.130905, 0.123878, 0.116779, 0.110699, 0.104629, 0.0991614, 0.0939567, 0.0890621, 0.0843359, 0.0799667, 0.0757982, 0.0718517, 0.0681991, 0.0646876, 0.0613271, 0.0583038, 0.0552479, 0.0524903, 0.0498689, 0.0473374, 0.0449834, 0.0426962, 0.0405928, 0.0385148, 0.0366102, 0.0347815, 0.0330348, 0.0314154, 0.0298622, 0.0284146, 0.0270184, 0.0256633, 0.0244272, 0.0232221, 0.0221286, 0.0210903, 0.0200492, 0.0190532, 0.0181182, 0.0172924, 0.0164983, 0.0156705, 0.0149409, 0.0142552, 0.0135221, 0.0129412, 0.0123129, 0.0117356, 0.0111839, 0.0106744, 0.0101709, 0.00971303, 0.00926711, 0.00884228, 0.00843468, 0.00804891, 0.00768892, 0.00733704, 0.00700553, 0.00668877, 0.0063914, 0.00610522, 0.0058319, 0.00556396, 0.00532131, 0.00508763, 0.00486108, 0.00463939, 0.00443396, 0.00424173, 0.00405545, 0.00387942, 0.00370617, 0.00354188, 0.00339179, 0.00323759, 0.00310405, 0.00296481, 0.00284157, 0.00271284, 0.00259874, 0.00248574, 0.00237832, 0.00227552, 0.00217795, 0.00208653, 0.00199515, 0.00191376, 0.00183322, 0.0017516, 0.00168121, 0.00161078, 0.00153979, 0.00146931, 0.00140906, 0.00134897, 0.00128887, 0.00123718, 0.00118576, 0.00113551, 0.00108577, 0.0010435, 0.000997216, 0.00095473, 0.000915357, 0.000877568, 0.000840728, 0.000805245, 0.000771779, 0.000739516, 0.000708408, 0.000679114, 0.000650676, 0.000624318, 0.000598723, 0.000573562, 0.000549562, 0.000527493, 0.000505629, 0.000484981, 0.000465203, 0.000445898, 0.000427871, 0.000409862, 0.000393573, 0.000377833, 0.000361982, 0.000347401, 0.000332768, 0.000319675, 
                      0.000306545, 0.000294796, 0.000282339, 0.000271498, 0.000260256, 0.000249327, 0.000239632, 0.000230503, 0.000221393, 0.000212278, 0.000203511, 0.000195547, 0.000187475, 0.000180201, 0.000173209, 0.000166263, 0.000159301, 0.000153047, 0.000147229, 0.00014128, 0.000135374, 0.0001303, 0.000125197, 0.000120283, 0.000115294, 0.000110389, 0.000106313, 0.000102247, 9.79463e-05, 9.40611e-05, 9.03759e-05, 8.67422e-05, 8.3244e-05, 7.9999e-05, 7.6866e-05, 7.37769e-05, 7.08472e-05, 6.80513e-05, 6.53704e-05, 6.27944e-05, 6.02854e-05, 5.80129e-05, 5.57239e-05, 5.34983e-05, 5.13787e-05, 4.93807e-05, 4.7458e-05, 4.55771e-05, 4.38047e-05, 4.2098e-05, 4.04683e-05, 3.88807e-05, 3.73635e-05, 3.58794e-05, 3.4477e-05, 3.31554e-05, 3.1856e-05, 3.05976e-05, 2.93724e-05, 2.82622e-05, 2.71492e-05, 2.60769e-05, 2.5048e-05, 2.40439e-05, 2.31585e-05, 2.22322e-05, 2.13403e-05, 2.05391e-05, 1.97253e-05, 1.89239e-05, 1.82139e-05, 1.7427e-05, 1.68072e-05, 1.61129e-05, 1.54998e-05, 1.48957e-05, 1.4299e-05, 1.36997e-05, 1.31928e-05, 1.26835e-05, 1.21776e-05, 1.16809e-05, 1.12659e-05, 1.08588e-05, 1.0447e-05, 1.00129e-05, 9.62507e-06, 9.25354e-06, 8.89497e-06, 8.55379e-06, 8.21588e-06, 7.90391e-06, 7.5969e-06, 7.30173e-06, 7.02374e-06, 6.75197e-06, 6.49139e-06, 6.23821e-06, 6.00305e-06, 5.76928e-06, 5.54716e-06, 5.33342e-06, 5.11994e-06, 4.92557e-06, 4.73383e-06, 4.55131e-06, 4.37597e-06, 4.20179e-06, 4.038e-06, 3.88717e-06, 3.73455e-06, 3.59055e-06, 3.44554e-06, 3.31387e-06, 3.18123e-06, 3.06043e-06, 2.93549e-06, 2.82367e-06, 2.71044e-06, 2.60761e-06, 2.50492e-06, 2.41114e-06, 2.3098e-06, 2.22636e-06, 2.13367e-06, 2.05209e-06, 1.96947e-06, 1.8962e-06, 1.82351e-06, 1.75101e-06, 1.67891e-06, 1.6169e-06, 1.55411e-06, 1.49201e-06, 1.42976e-06, 1.37778e-06, 1.31596e-06, 1.2639e-06, 1.22175e-06, 1.16964e-06};
Double_t sqsq_crossxerr[361]={16.2039, 16.3809, 16.1868, 16.263, 15.7982, 15.9605, 16.0769, 16.045, 16.0252, 16.026, 15.983, 15.9974, 16.064, 15.9386, 15.9145, 15.9782, 15.9878, 15.9539, 15.9291, 15.7976, 15.8736, 15.9464, 15.6206, 15.9309, 15.8077, 15.7923, 15.6199, 15.9272, 15.7898, 15.7828, 15.7205, 15.7911, 15.735, 15.7608, 15.7492, 15.7059, 15.7538, 15.6609, 15.7766, 15.7276, 15.6882, 15.7281, 15.632, 15.6483, 15.6572, 15.4725, 15.4118, 15.5849, 15.7899, 15.7033, 15.6075, 15.7226, 15.7359, 15.8671, 15.9311, 15.965, 16.1122, 16.1103, 16.2138, 16.3326, 16.3916, 16.4567, 16.5664, 16.6293, 16.6616, 16.7806, 16.8512, 16.9228, 17.0247, 17.0994, 17.156, 17.227, 17.3287, 17.3913, 17.4948, 17.5742, 17.6718, 17.7156, 17.8048, 17.9041, 17.9829, 18.0599, 18.1688, 18.2594, 18.303, 18.3914, 18.4896, 18.6107, 18.6969, 18.7511, 18.8802, 18.9162, 19.0392, 19.1186, 19.1932, 19.3371, 19.3985, 19.4636, 19.5595, 19.6832, 19.7578, 19.8358, 19.9649, 20.0473, 20.1237, 20.2102, 20.3259, 20.4105, 20.5031, 20.6244, 20.6674, 20.8506, 21.0513, 21.1424, 21.3519, 21.4219, 21.5023, 21.7231, 21.7671, 21.9787, 22.2285, 22.2701, 22.5288, 22.7756, 22.781, 22.8093, 23.0162, 23.3299, 23.3027, 23.6311, 23.8698, 23.8156, 24.125, 24.4486, 24.3179, 24.7131, 24.5274, 24.8492, 24.7361, 25.2594, 25.4549, 25.6048, 25.8117, 25.9836, 26.302, 26.4167, 26.5975, 26.8766, 27.0893, 27.2165, 27.4695, 27.6247, 27.8582, 28.0632, 28.2628, 28.4392, 28.6634, 28.9497, 29.03, 29.331, 29.5205, 29.8436, 29.8628, 30.0143, 30.2933, 30.4488, 30.7504, 31.0307, 31.1646, 31.434, 31.5522, 31.7999, 32.0947, 32.1288, 32.4236, 32.4253, 32.6845, 32.905, 33.1506, 33.3478, 33.6196, 33.8129, 34.0018, 34.2412, 34.4636, 34.6449, 34.7873, 34.9997, 35.3174, 35.6404, 35.8365, 35.9708, 36.4301, 36.5282, 36.7698, 36.9964, 37.231, 37.3963, 37.6435, 37.9148, 38.1334, 38.3499, 38.5765, 38.8425, 38.9873, 39.2895, 39.5262, 39.7002, 40.0086, 40.1438, 40.4963, 40.6305, 40.9934, 41.203, 41.3892, 41.6931, 41.8675, 42.015, 42.4236, 42.5716, 42.7858, 43.0279, 43.1978, 43.6073, 43.7244, 44.1337, 44.3156, 44.4001, 44.6817, 44.9331, 45.2874, 45.3297, 45.5738, 45.8277, 46.3195, 46.5212, 46.7504, 46.9367, 47.4366, 47.4827, 47.7033, 47.8904, 48.1692, 48.5588, 48.7477, 48.927, 49.0882, 49.4528, 49.7384, 49.8845, 50.1372, 50.3841, 50.6382, 50.9002, 51.0768, 51.3966, 51.6587, 51.8846, 52.1552, 52.3657, 52.5847, 52.8804, 53.0537, 53.2859, 53.5996, 53.8278, 54.0627, 54.3979, 54.5762, 54.734, 54.9851, 55.3523, 55.5281, 55.8488, 56.0275, 56.2583, 56.695, 56.9093, 56.9369, 57.273, 57.5567, 57.8551, 57.8927, 58.3883, 58.6135, 58.7258, 59.1014, 59.2508, 59.5617, 59.8522, 60.0601, 60.4195, 60.492, 60.8741, 61.0663, 61.3822, 61.6148, 61.8158, 61.9744, 62.3079, 62.5799, 62.8217, 63.0019, 63.3682, 63.7139, 64.0362, 64.1805, 64.431, 64.6831, 64.9643, 65.1984, 65.4621, 65.721, 65.9674, 66.2857, 66.4446, 66.8143, 67.0235, 67.2938, 67.5076, 67.7924, 68.027, 68.291, 68.4659, 68.7741, 68.9606, 69.1975, 69.5395, 69.7221, 70.007, 70.1691, 70.3781, 70.6721, 70.9931, 71.1776, 71.4023, 71.5067, 71.8499, 72.0324, 72.2664, 72.5045, 72.7285, 73.0225, 73.1277, 73.4397, 73.6332, 73.8618, 74.0596, 74.3617, 74.6116, 74.8117, 74.974, 75.26, 75.5088, 75.6846, 75.8735, 76.1476, 76.2424, 76.4338, 76.772, 76.9407};

//Linear Interpolation to get the cross-section for any mass
// between 100 GeV and 2000 GeV for stop squarks 
// and between 200 GeV and 2000 GeV for gluinos and 1st/2nd gen squarks
// proc==1 --> STOP
// proc==2 --> GLUINO
// proc==3 --> SQUARK
//Cross-sections in picobarns
Double_t crossx(Double_t mass, Int_t proc_opt){

  Double_t cut;  //where the corssx list starts
  if(proc_opt==1){cut=100.;}
  if(proc_opt==2){cut=200.;}
  if(proc_opt==3){cut=200.;}

  if(mass<cut){
    std::cout << "MIW_search_data: crossx() - mass too small.\n";
    std::cout << "Proc_opt: " << proc_opt << "   mass: " << mass << std::endl;
    return -1;
  }
  else if(mass>2000){
    std::cout << "MIW_search_data: crossx() - mass too large.\n";
    return -1;
  }
 
  //find the relevant indices
  Int_t ind1=(Int_t)TMath::Floor( (mass-cut)/5. );
  Int_t ind2=(Int_t)TMath::Ceil( (mass-cut)/5. );
  
  //Stop/sbottom or gluino? 
  if( proc_opt==1 ){
    return ( stop_crossx[ind1] + (stop_crossx[ind2]-stop_crossx[ind1])*(mass-(cut+ind1*5))/5 );
  }
  else if( proc_opt==2 ){
    return ( gogo_crossx[ind1] + (gogo_crossx[ind2]-gogo_crossx[ind1])*(mass-(cut+ind1*5))/5 );
  }
  else if( proc_opt==3 ){
    return ( sqsq_crossx[ind1] + (sqsq_crossx[ind2]-sqsq_crossx[ind1])*(mass-(cut+ind1*5))/5 );
  }
  std::cout << "MIW_search_data: crossx() - invalid argument \' " << proc_opt << "\' .\n";
  return -1;
}

#endif
